git init
git add .
git status

git commit -m 'some comments'
git push origin master

git log --stat --summary

git branch local
git checkout local
git checkout master # 将当前分支切换为master
git merge local # 将local分支与当前分支合并
git branch -d local

git commit -m "first anwen"

git push -u origin master
git push origin master

git config --global user.name "askender"
git config --global user.email "askender43@gmail.com"
git config --list

git remote add origin https://github.com/askender/anwen.in.git

git clone https://github.com/askender/anwen.in.git



.撤销更改 

git reset HEAD file1 // 取消暂存区的文件快照(即恢复成最后一个提交版本)，这不会影响工作目录的文件修改。 

git reset --hard HEAD^ // 将整个项目回溯到以前的某个版本，可以使用 "git reset"。可以选择的参数包括默认的 "--mixed" 和 "--hard"，前者不会取消工作目录的修改，而后者则放弃全部的修改。该操作会丢失其后的日志 


git checkout -- file1 // 使用暂存区快照恢复工作目录文件，工作目录的文件修改被抛弃。 

git checkout HEAD^ file1 // 直接 "签出" 代码仓库中的某个文件版本到工作目录，该操作同时会取消暂存区快照。 

git checkout "@{10 minutes ago}" // 直接 "签出" 10分钟之前代码仓库中的某个文件版本到工作目录，该操作同时会取消暂存区快照。 

git checkout "@{5}" // 直接 "签出" 倒数第五次保存的某个文件版本到工作目录，该操作同时会取消暂存区快照。 

git revert SHA1_HASH // 还原特定哈希值对应的提交。该还原记录作为一个新的提交。

在CentOS上安装git
先安装git依赖的包 
yum install zlib-devel
yum install openssl-devel
yum install perl
yum install cpio
yum install expat-devel
yum install gettext-devel
确保已安装了依赖的包
yum install curl
yum install curl-devel


安装autoconf 
yum install autoconf

安装git 
wget http://www.codemonkey.org.uk/projects/git-snapshots/git/git-latest.tar.gz
tar xzvf git-latest.tar.gz
cd git-{date}
autoconf
yum install perl-devel
./configure --with-curl=/usr/local
./configure
make & make install

git --version

git init .
git config receive.denyCurrentBranch ignore
git config --bool receive.denyNonFastForwards false
cd .git/hooks
wget http://utsl.gen.nz/git/post-update
chmod +x post-update

在本地git中配置：

[remote "prod"] url = your-ssh-username@your-host:/var/www/yoursite/.git
对应的git命令是：
ssh://root@113.11.199.77:22
git remote add prod your-ssh-username@your-host:/var/www/yoursite/.git
git remote add prod root@113.11.199.77:/var/www/xxx/.git
这样就算配置完成了，如果要把本地git的代码推送到服务器，命令是：
git remote rm prod
git push prod master
master对应你自己的分支的名字就好，prod的意思是product。